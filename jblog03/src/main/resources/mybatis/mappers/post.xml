<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="post">
		
	<select id="findAll" parameterType="string" resultType="postvo">
		<![CDATA[
		    select p.id as id,
		           title,
		           contents,
		           reg_date as regDate,
		           category_id as categoryId
		    from category c join post p on c.id = p.category_id
		    where c.blog_id = #{userId}
		    order by regDate desc
		]]>
	</select>
	
	<select id="findByCategoryId" parameterType="map" resultType="postvo">
		<![CDATA[
		    select p.id as id,
		           title,
		           contents,
		           reg_date as regDate,
		           category_id as categoryId
		    from category c join post p on c.id = p.category_id
		    where c.blog_id = #{id} and p.category_id = #{categoryId}
		    order by regDate desc;
		]]>
	</select>
	
	
	<select id="findByPostId" parameterType="map" resultType="postvo">
		<![CDATA[
			select p.id as id,
		           title,
		           contents,
		           reg_date as regDate,
		           category_id as categoryId
		    from category c join post p on c.id = p.category_id
		    where c.blog_id = #{id} and p.category_id = #{categoryId} and p.id = #{postId}
		    order by regDate desc;		
		]]>
	</select>
	
	<delete id="deleteAll" parameterType="long">
		<![CDATA[
		delete
		  from post
		 where category_id=#{categoryId}
		]]>
	</delete>
	
	<insert id="insert" parameterType="map">
	    <![CDATA[
	        insert into post (id, title, contents, reg_date, category_id)
	        values (
	            null, 
	            #{title}, 
	            #{contents}, 
	            NOW(), 
	            (SELECT id 
	             FROM category 
	             WHERE name = #{categoryName } and blog_id = #{userId})
	        );
	    ]]>
	</insert>
</mapper>
